{
	"info": {
		"_postman_id": "259bcbc1-d8cc-4af9-bd32-3992630fd759",
		"name": "Spotify",
		"description": "<a href=\"https://docs.google.com/drawings/d/11GIo2IAQmictmFJuxIJ3sj1zi_nFSDlm_uJMLa9I3WE/pub?w=1410&amp;h=772\" target=\"_blank\"><img src=\"https://docs.google.com/drawings/d/11GIo2IAQmictmFJuxIJ3sj1zi_nFSDlm_uJMLa9I3WE/pub?w=1410&amp;h=772\"></a>\n\nThe Spotify playlist generator collection lets you get your daily/weekly dose of fresh music. Modeled on the AMAZING [Spotify Discover Weekly](https://www.spotify.com/discoverweekly/), within 5 minutes you'll be able to set this up, and even tweak it to your heart's content!\n\n### Workflow\n\n<a href=\"https://docs.google.com/drawings/d/1p7imXUIWIC9t5vX4B5jD2XuY6MoYOYcT9I9gJVi87ic/pub?w=1532&amp;h=241\" target=\"_blank\">\n<img src=\"https://docs.google.com/drawings/d/1p7imXUIWIC9t5vX4B5jD2XuY6MoYOYcT9I9gJVi87ic/pub?w=1532&amp;h=241\"></a>\n\n1. Take a list of artists as input\n2. Randomly select an artist from this list and usse Spotify's fantastic [Get Related Artists](https://developer.spotify.com/web-api/console/get-artist-related-artists/) and [Get an Artist's top tracks](https://developer.spotify.com/web-api/console/get-artist-top-tracks/) APIs to mashup a playlist\n3. Add these related artists back to the original list and persist back to the environment\n\n### Setup the Environment\n\nClick on the Run in Postman button above to import the collection and environment template within your app.\n\n1. ##### Spotify\n    * Head to [Spotify Developer](https://developer.spotify.com) and register, then create a new app in the My Applications section. Add the `client_id` and `client_secret` to your environment.\n    * Under the newly created app config, add the following Redirect URI - `https://www.getpostman.com/oauth2/callback`\n    * We'll use the [Authorization Code Flow](https://developer.spotify.com/web-api/authorization-guide/#authorization-code-flow) to obtain the Refresh Token.\n    * Open Postman, under a new request, click on the Authorization tab, select OAuth 2.0 and fill in these values:\n    - Token Name: can be anything\n      - Auth URL: https://accounts.spotify.com/authorize\n      - Access Token URL: https://accounts.spotify.com/api/token\n      - Client ID: {{client_id}}\n      - Client Secret: {{client_secret}}\n      - [Scope](https://developer.spotify.com/web-api/authorization-guide/#scopes): `playlist-read-private playlist-modify-private`\n      - Grant Type: Authorization Code\n      - Request access token locally: Checked\n  * Click on Request Token, go through the OAuth flow, and add the `refresh_token` to your environment\n\n2. ##### Collection Config\n  Set the following variables in your environment\n  * `user_id`: your spotify username\n  * `country_code`:  in [ISO 3166-1](http://en.wikipedia.org/wiki/ISO3166-1alpha-2) format\n  * `N`: defaults to 5. Refer to the algorithm section for more details\n  * `artists`: List of seed artists for the collection. You can find them as part of the Spotify artist link (Available in the app): e.g. for Oasis, the link looks something like https://open.spotify.com/artist/2DaxqgrOhkeH0fpeiQq2f4, choose the last section. The artists variable is an array of strings, so it'll look something like: [\"2DaxqgrOhkeH0fpeiQq2f4\", \"2ooIqOf4X2uz4mMptXCtie\"]\n\n### Run the Collection\n\n1. To verify that everything works as expected, run the collection in the Postman app using the [Collection Runner](https://www.getpostman.com/docs/running_collections)\n2. The same collection executes in [Newman](https://github.com/postmanlabs/newman) as well. Just export the Collection and Environment files and execute the following command\n\n```\nnewman -c SpotifyPLGen.json.postman_collection -e SpotifyPlGen.json.postman_environment\n```\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Auth Key (Del)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var client_credentials = (environment.client_id + ':' + environment.client_secret).encodeBase64();",
							"postman.setEnvironmentVariable(\"client_credentials\", client_credentials);",
							"",
							"environment.cloned_environment && (delete environment.cloned_environment);",
							"var environmentObjClone = _.cloneDeep(environment);",
							"postman.setEnvironmentVariable(\"cloned_environment\", JSON.stringify(environmentObjClone));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = (responseCode.code === 200);",
							"",
							"if (responseCode.code === 200) {",
							"    try {",
							"        var authorization = JSON.parse(responseBody).access_token,",
							"            refresh_token = JSON.parse(responseBody).refresh_token;",
							"        postman.setEnvironmentVariable(\"authorization\", authorization);",
							"        refresh_token && postman.setEnvironmentVariable(\"refresh_token\", refresh_token);",
							"    }",
							"    catch (e) {",
							"        console.log(e);",
							"        throw false;",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenName",
							"value": "Spotify_Token",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "clientSecret",
							"value": "{{client_secret}}",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "{{client_id}}",
							"type": "string"
						},
						{
							"key": "scope",
							"value": "playlist-read-private playlist-modify-private",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "https://accounts.spotify.com/api/token",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "https://accounts.spotify.com/authorize",
							"type": "string"
						},
						{
							"key": "redirect_uri",
							"value": "https://www.getpostman.com/oauth2/callback",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{client_credentials}}"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "refresh_token",
							"type": "text"
						},
						{
							"key": "refresh_token",
							"value": "{{refresh_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://accounts.spotify.com/api/token",
					"protocol": "https",
					"host": [
						"accounts",
						"spotify",
						"com"
					],
					"path": [
						"api",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Artist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = (responseCode.code === 200);",
							"",
							"if (responseCode.code === 200) {",
							"    var artist = JSON.parse(responseBody);",
							"  // Store the artist name in the environment",
							"    postman.setEnvironmentVariable(\"artist_name\", artist.name);",
							"  // Store the artist id in an artists array",
							"    // postman.setEnvironmentVariable(\"artists\", JSON.stringify([environment.id]));",
							"    // As defined in the workflow, set the next request to be executed to Get Related Artists",
							"    postman.setNextRequest(\"Get Related Artists\");",
							"    console.log(\"Information retrieved for artist: \" + environment.artist_name);",
							"}",
							"",
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using pm.expect()",
							"pm.test(\"environment to be production\", function () { ",
							"    pm.expect(pm.environment.get(\"env\")).to.equal(\"production\"); ",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"try {",
							"    var artist_id = _.sample(JSON.parse(environment.artists));",
							"    postman.setEnvironmentVariable(\"id\", artist_id);",
							"}",
							"catch (e) {",
							"    console.log(e);",
							"    throw false;",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authorization}}",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "https://api.spotify.com/v1/artists/0OdUWJ0sBjDrqHygGUXeCF",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"artists",
						"0OdUWJ0sBjDrqHygGUXeCF"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Track",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.spotify.com/v1/search?q=track:something%20artist:the%20beatles&type=track",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"search"
					],
					"query": [
						{
							"key": "q",
							"value": "track:something%20artist:the%20beatles"
						},
						{
							"key": "type",
							"value": "track"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Related Artists",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = (responseCode.code === 200);",
							"",
							"if (responseCode.code === 200) {",
							"    try {",
							"        var N = _.parseInt(environment.N),",
							"            relatedArtists = _(JSON.parse(responseBody).artists).sample(N).pluck('id').value(),",
							"            artists = JSON.parse(environment.artists);",
							"    ",
							"        !environment.done_artists && postman.setEnvironmentVariable(\"done_artists\", JSON.stringify([]));",
							"        artists = _.difference(_.union(artists, relatedArtists), JSON.parse(environment.done_artists));",
							"        postman.setEnvironmentVariable(\"current_artists\", JSON.stringify(_.union(relatedArtists, [environment.id])));",
							"        postman.setEnvironmentVariable(\"artists\", JSON.stringify(artists));",
							"        postman.setNextRequest(\"Create a Playlist\");",
							"        console.log(\"Related artists retrieved for: \" + environment.artist_name);",
							"    }",
							"    catch (e) {",
							"        console.log(e);",
							"        throw false;",
							"    }",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authorization}}"
					}
				],
				"url": {
					"raw": "https://api.spotify.com/v1/artists/{{id}}/related-artists",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"artists",
						"{{id}}",
						"related-artists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Playlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 201\"] = (responseCode.code === 201);",
							"",
							"if (responseCode.code === 201) {",
							"    var playlist = JSON.parse(responseBody);",
							"    ",
							"    // Store the playlist id in the environment to add tracks in the future",
							"    postman.setEnvironmentVariable(\"playlist_id\", playlist.id);",
							"    postman.setNextRequest(\"Get Artist Top Tracks\");",
							"    console.log(\"Created playlist: \" + environment.artist_name + \" Mix\");",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authorization}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Test2\",\n  \"public\": false\n}"
				},
				"url": {
					"raw": "https://api.spotify.com/v1/me/playlists",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"me",
						"playlists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Playlists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 201\"] = (responseCode.code === 201);",
							"",
							"if (responseCode.code === 201) {",
							"    var playlist = JSON.parse(responseBody);",
							"    ",
							"    // Store the playlist id in the environment to add tracks in the future",
							"    postman.setEnvironmentVariable(\"playlist_id\", playlist.id);",
							"    postman.setNextRequest(\"Get Artist Top Tracks\");",
							"    console.log(\"Created playlist: \" + environment.artist_name + \" Mix\");",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{authorization}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.spotify.com/v1/users/simonmazzucca/playlists/32G2ZRsMN9V1B6lT24XaVL",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"users",
						"simonmazzucca",
						"playlists",
						"32G2ZRsMN9V1B6lT24XaVL"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Artist Top Tracks",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Counter for the loop",
							"var c = environment.c ? _.parseInt(environment.c) : 0;",
							"var artists = JSON.parse(environment.current_artists);",
							"",
							"// This value will be use in the URL",
							"postman.setEnvironmentVariable(\"artist_id\", artists[c]);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = (responseCode.code === 200);",
							"",
							"if (responseCode.code === 200) {",
							"    var N = _.parseInt(environment.N),",
							"        tracks = _(JSON.parse(responseBody).tracks).sample(N).pluck('id').value();",
							"    ",
							"    // Store the track ids in the Environment, to be used in the next request",
							"    postman.setEnvironmentVariable(\"tracks\", JSON.stringify(tracks));",
							"    postman.setNextRequest(\"Add Tracks to Playlist\");",
							"    console.log(\"Related artists retrieved for: \" + environment.artist_name);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authorization}}"
					}
				],
				"url": {
					"raw": "https://api.spotify.com/v1/artists/{{artist_id}}/top-tracks?country={{country_code}}",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"artists",
						"{{artist_id}}",
						"top-tracks"
					],
					"query": [
						{
							"key": "country",
							"value": "{{country_code}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Tracks to Playlist",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authorization}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"uris\": [\r\n        \"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\",\r\n        \"spotify:track:1301WleyT98MSxVHPZCA6M\",\r\n        \"spotify:episode:512ojhOuo1ktJprKbVcKyQ\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "https://api.spotify.com/v1/playlists/6fiYojh6BPs55tHIEXUUUL/tracks",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"playlists",
						"6fiYojh6BPs55tHIEXUUUL",
						"tracks"
					],
					"query": [
						{
							"key": "uris",
							"value": "spotify%3Atrack%3A4iV5W9uYEdYUVa79Axb7Rh%2Cspotify%3Atrack%3A1301WleyT98MSxVHPZCA6M",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "MyShazam",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authority",
						"value": " www.shazam.com",
						"type": "text"
					},
					{
						"key": "method",
						"value": " GET",
						"type": "text"
					},
					{
						"key": "path",
						"value": " /discovery/v4/en-US/US/web/-/tag/51E5A250-3C5D-4CC4-9C7B-D823B44F8D2B?limit=20",
						"type": "text"
					},
					{
						"key": "scheme",
						"value": " https",
						"type": "text"
					},
					{
						"key": "accept",
						"value": " */*",
						"type": "text"
					},
					{
						"key": "accept-encoding",
						"value": " gzip, deflate, br",
						"type": "text"
					},
					{
						"key": "accept-language",
						"value": " en-US,en;q=0.9,it;q=0.8",
						"type": "text"
					},
					{
						"key": "cookie",
						"value": " geoip_country=US; geoip_lat=40.781; geoip_long=-73.950; _ga=GA1.2.2050609134.1556977896; _gid=GA1.2.1037496073.1556977896; codever=a3b24bf8dd173c25455e66889c37ad7c243ed3b86e19264428aa18f5fcc5c2056470d48ac550b819bd752d1c11a6482a6d5be6dbc8c991b8172aefc8c0a9bf9576007ba17e51301cca04e87a5817938d9a4cee36093740d580baf0d61278f82b6096d715129826f83d9f0c8d23d798d0ddd35856c200d9d704cba7a20e6e3e577b00b17efebe727bb6ca2880e35ff25932feda680a4124d2c6a4; _gat=1",
						"type": "text"
					},
					{
						"key": "if-none-match",
						"value": " W/\"2840-xvNbZHvd6rnpdI2MNJ+0Hw\"",
						"type": "text"
					},
					{
						"key": "referer",
						"value": " https://www.shazam.com/myshazam",
						"type": "text"
					},
					{
						"key": "user-agent",
						"value": " Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://www.shazam.com/discovery/v4/en-US/US/web/-/tag/51E5A250-3C5D-4CC4-9C7B-D823B44F8D2B",
					"protocol": "https",
					"host": [
						"www",
						"shazam",
						"com"
					],
					"path": [
						"discovery",
						"v4",
						"en-US",
						"US",
						"web",
						"-",
						"tag",
						"51E5A250-3C5D-4CC4-9C7B-D823B44F8D2B"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "tokenName",
				"value": "Spotify_API_Token",
				"type": "string"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "playlist-read-private playlist-modify-private",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "https://www.getpostman.com/oauth2/callback",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{client_secret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{client_id}}",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://accounts.spotify.com/authorize",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "header",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://accounts.spotify.com/api/token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "client_id",
			"value": "773d6796930f47ccbbc2a0b7a248f666"
		},
		{
			"key": "client_secret",
			"value": "6b5c0e0dda324a5382413c5bf72b07d1"
		},
		{
			"key": "authorization",
			"value": "???",
			"disabled": true
		},
		{
			"key": "Simone",
			"value": "",
			"disabled": true
		},
		{
			"key": "variable_key",
			"value": "",
			"disabled": true
		}
	]
}